<?xml version="1.0" encoding="UTF-8"?><script><script_id>76:TEST</script_id><name>Check for Inventory Placeholder</name><script_type_id>3</script_type_id><row_version>4</row_version><lu_id>gondkaru</lu_id><lu_date>2022-02-02T16:05:22</lu_date><false_msg/><description/><emit_events>0</emit_events><script_line><script_line_id>207:TEST</script_line_id><script_id>76:TEST</script_id><sequence>1</sequence><script_class_id>7</script_class_id><source_name>LOCAL</source_name><row_version>1</row_version><lu_id>MISHRAV</lu_id><lu_date>2022-01-21T08:49:13</lu_date><statement>// Standard Java Files[lf]importPackage(Packages.java.math);[lf]importPackage(Packages.java.lang);[lf]importPackage(Packages.java.util);[lf][lf]// Workpoint Files[lf]importPackage(Packages.com.workpoint.client);[lf]importPackage(Packages.com.workpoint.common.util);[lf]importPackage(Packages.com.workpoint.common.data);[lf]importPackage(Packages.com.workpoint.common.script);[lf]importPackage(Packages.com.workpoint.common.logging);[lf]// Security Files[lf]importPackage(Packages.com.csgsystems.fx.security);[lf]// Bali Files[lf]importPackage(Packages.com.csgsystems.bali.connection);[lf]importPackage(Packages.com.csgsystems.aruba.connection);[lf][lf][lf]logger = WPLogger.getLogger("com.workpoint.comverse.CheckPlaceholder");[lf][lf]logger.info("INFO: ActivityInstId: " + SymbolTable.getSymbol("ActInstIDStr").getPrimaryValue() + " Iteration: " + SymbolTable.getSymbol("WorkItemIteration").getPrimaryValue());[lf][lf]try {[lf]    // Check to see if this script is ran in a subjob[lf]    if (ThisJobData.getJobParentID()) {[lf]        logger.debug("DEBUG: gettingparent job");[lf]        job = Job.queryByID(ClientContext, ThisJobData.getJobParentID(), true);[lf]        serviceOrderId = job.getBulkUserDataString("ServiceOrderId");[lf]        serverId = new Integer(job.getBulkUserDataString("CustomerServerId"));[lf]    }[lf]    else {[lf]        logger.debug("DEBUG: no parent");[lf]        serviceOrderId = ThisJobData.getBulkUserDataString("ServiceOrderId");[lf]        serverId = new Integer(ThisJobData.getBulkUserDataString("CustomerServerId"));[lf]    }[lf]    logger.debug("DEBUG: ServiceOrderId " + serviceOrderId);[lf]    logger.debug("DEBUG: CustomerServerId " + serverId);[lf][lf]    sm = SecurityManagerFactory.createSecurityManager();[lf]    connfact = new ConnectionFactory();[lf]    settings = BSDMSettings.getDefault();[lf]    conn = connfact.createConnection(settings);[lf]    //Create reuqest Map[lf]    requestMap = new HashMap();[lf]    // Create a ItemObjctFilter object[lf]    itemObject = new HashMap();[lf]    requestMap.put("ItemObjectFilter", itemObject);[lf]    // Set the filterâ€™s serviceOrderId, IsCancelled and MemberType values[lf]    serviceOrderIdMap = new HashMap();[lf]    serviceOrderIdMap.put("Equal", serviceOrderId);[lf][lf]    isCancelledMap = new HashMap();[lf]    isCancelledMap.put("Equal", "0");[lf][lf]    memberTypedMap = new HashMap();[lf]    memberTypedMap.put("Equal", "72"); //72=Inv Placeholder[lf][lf]    itemObject.put("ServiceOrderId", serviceOrderIdMap);[lf]    itemObject.put("IsCancelled", isCancelledMap);[lf]    itemObject.put("MemberType", memberTypedMap);[lf][lf][lf]    session = BSDMSessionContext.getDefaultContext();[lf]    session.setSecurityContext(sm);[lf]    session.setOperatorName("Workpoint");[lf]    session.setServerId(serverId);[lf][lf]    logger.debug("DEBUG: Calling ItemFInd");[lf][lf]    callResponse = conn.call(session, ApiMappings.getCallName("ItemFind"), requestMap);[lf][lf]    if (callResponse != null) {[lf]        //Find total count of placeholder records..   [lf]        totalCount = callResponse.get("TotalCount");[lf]        SymIteration = SymbolTable.getSymbol("WorkItemIteration").getPrimaryValue();[lf]        activity = new TableID(SymbolTable.getSymbol("ActInstIDStr").getPrimaryValue());[lf]        work = WorkItemEntry.queryByID(ClientContext, activity, SymIteration);[lf]        if (work != null) {[lf]            if (totalCount != 0) {[lf]                logger.debug("Debug: No Placeholder Found. ");[lf]                // complete the node[lf]                workstate = work.getWorkStateID();[lf]                if (workstate == WorkItemConst.WORK_STATE_AVAILABLE) // Available[lf]                    work.open();[lf]                work.changeState(WorkItemConst.WORK_STATE_COMPLETE, 0, 72, "Placeholder Exists");[lf]            }[lf]            else {[lf]                workstate = work.getWorkStateID();[lf]                if (workstate == WorkItemConst.WORK_STATE_AVAILABLE) // Available[lf]                {[lf]                    work.openAndComplete(0);[lf]                }[lf]                else if (workstate == WorkItemConst.WORK_STATE_OPEN) // Open[lf]                {[lf]                    work.complete(0);[lf]                }[lf]            }[lf][lf]        }[lf][lf]    }[lf]}[lf]catch (e) {[lf]    // need to complete node with code[lf][lf]    SymIteration = SymbolTable.getSymbol("WorkItemIteration").getPrimaryValue();[lf]    activity = new TableID(SymbolTable.getSymbol("ActInstIDStr").getPrimaryValue());[lf]    work = WorkItemEntry.queryByID(ClientContext, activity, SymIteration);[lf][lf]    if (work != null) {[lf]        workstate = work.getWorkStateID();[lf]        if (workstate == WorkItemConst.WORK_STATE_AVAILABLE) // Available[lf]            work.open();[lf][lf]        work.changeState(WorkItemConst.WORK_STATE_COMPLETE, 0, 60, "exception: " + e);[lf]    }[lf][lf]}</statement><name/><validation_status>0</validation_status><validation_status_msg/></script_line><validation_status>0</validation_status></script>