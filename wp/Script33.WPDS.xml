<?xml version="1.0" encoding="UTF-8"?><script><script_id>33:WPDS</script_id><name>GRS Split Node Item</name><script_type_id>3</script_type_id><row_version>23</row_version><lu_id>SNEHAI</lu_id><lu_date>2015-10-27T00:57:58</lu_date><false_msg/><description>This script can only be used in an activity that was creted with a split node. This script uses the splitID() for the job. So in this example script the split node create userdata for each item called ItemIdX, where X is 0,1,2,etc... Then in this script the ItemId is used with the splitID to grap the itemid and pass it on to other activities. So ItemId1 - is used by the first job, ItemId2 is used by the second job, etc...</description><emit_events>0</emit_events><script_line><script_line_id>120:TEST</script_line_id><script_id>33:WPDS</script_id><sequence>1</sequence><script_class_id>7</script_class_id><source_name>LOCAL</source_name><row_version>1</row_version><lu_id>SNEHAI</lu_id><lu_date>2015-10-27T00:57:58</lu_date><statement>// Standard Java Files[lf]importPackage(Packages.java.math);[lf]importPackage(Packages.java.lang);[lf]importPackage(Packages.java.util);[lf][lf]// Workpoint Files[lf]importPackage(Packages.com.workpoint.client);[lf]importPackage(Packages.com.workpoint.common.util);[lf]importPackage(Packages.com.workpoint.common.data);[lf][lf]// Security Files[lf]importPackage(Packages.com.csgsystems.fx.security);[lf]// Bali Files[lf]importPackage(Packages.com.csgsystems.bali.connection);[lf]importPackage(Packages.com.csgsystems.aruba.connection);[lf]importPackage(Packages.com.csgsystems.aruba.filter);[lf]importPackage(Packages.com.csgsystems.bp.data);[lf]importPackage(Packages.com.csgsystems.om.session);[lf]importPackage(Packages.com.csgsystems.om.data);[lf][lf]importPackage(Packages.com.workpoint.common.logging);[lf][lf]logger = WPLogger.getLogger("com.workpoint.comverse.GRSSplitNode");[lf][lf]logger.info("INFO: ActivityInstId: " + [lf]    SymbolTable.getSymbol("ActInstIDStr").getPrimaryValue() +[lf]    " Iteration: " + SymbolTable.getSymbol("WorkItemIteration").getPrimaryValue());[lf][lf]try[lf]{[lf]     // Check to see if this script is ran in a subjob[lf]     if (ThisJobData.getJobParentID())[lf]     {[lf]         job = Job.queryByID(ClientContext, ThisJobData.getJobParentID(), true);[lf]         serverid = new Integer(job.getBulkUserDataString("CustomerServerId"));[lf]         soid = new BigInteger(job.getBulkUserDataString("ServiceOrderId"));[lf]     }[lf]     else[lf]     {[lf]          serverid = new Integer(ThisJobData.getBulkUserDataString("CustomerServerId"));[lf]          soid = new BigInteger(ThisJobData.getBulkUserDataString("ServiceOrderId"));[lf]      }[lf]      logger.debug("DEBUG: CustomerServerId - " + serverid);[lf]      logger.debug("DEBUG: ServiceOrderId - " + soid);[lf][lf]      splitid = ThisJobData.getSplitID();[lf]      logger.debug("DEBUG: splitid "+splitid);[lf][lf]     // Get activity user data to find items[lf]     if (!splitid == null)[lf]     {[lf]        logger.warn("WARN: GRS Split node script must be on split node");[lf]        SymbolTable.add("Result1").setValue( 0, 'FALSE' );[lf]     }[lf]     else[lf]     {[lf]        itemid = ThisJobData.getBulkUserDataString("ItemId"+splitid);[lf][lf]        if (itemid == null || !ThisJobNodeData.doesBulkUserDataExist("ActionId"))[lf]        {[lf]           logger.warn("WARN: ItemId not found or ActionID not found");[lf]           SymbolTable.add("Result1").setValue( 0, 'FALSE' );[lf]        }[lf]        else[lf]        {[lf]            logger.debug("Itemid: " + itemid);[lf]            resmap = new HashMap();[lf]            keymap = new HashMap();[lf][lf]            workItemIter = ThisWorkItemData.getWorkItemIteration();[lf]            keymap.put("WorkItemId", SymbolTable.getSymbol("ActInstIDStr").getPrimaryValue());[lf]            keymap.put("Iteration", new Integer(workItemIter)); [lf][lf]            resmap.put("APIName", "WorkpointUpdate");[lf]            resmap.put("CustomerServerId",serverid);[lf]            resmap.put("Key", keymap);[lf][lf]            reqestmap = new HashMap();[lf]            reqestmap.put("ResponseAPI", resmap);[lf][lf]            reqestmap.put("ActionId", new Integer(ThisJobData.getActivityBulkUserDataString(ThisActivityInstData.getActivityInstID(),"ActionId")));[lf]            reqestmap.put("ServiceOrderId", soid);[lf][lf]            reqestmap.put("ItemId", itemid);[lf][lf]            session = BSDMSessionContext.getDefaultContext()[lf]            session.setSecurityContext(SecurityManagerFactory.createSecurityManager ());[lf]            session.setServerId(serverid);[lf]    [lf]            connfact = new ConnectionFactory();[lf]            conn =connfact.createConnection(BSDMSettings.getDefault ());[lf] [lf]            reqestmap = conn.call(session, ApiMappings.getCallName ("PerformAction"), reqestmap);[lf]        }[lf]     }[lf]}[lf]catch(e)[lf]{[lf]  java.lang.System.out.println("exception: " + e);[lf]  // need to complete node with code[lf]  [lf]  SymIteration = SymbolTable.getSymbol("WorkItemIteration").getPrimaryValue();[lf]  activity = new TableID(SymbolTable.getSymbol("ActInstIDStr").getPrimaryValue());[lf]  work = WorkItemEntry.queryByID(ClientContext, activity, SymIteration);[lf][lf]  if( work != null )[lf] {[lf]    workstate = work.getWorkStateID();[lf]    if( workstate == WorkItemConst.WORK_STATE_AVAILABLE ) // Available[lf]      work.open();[lf][lf]    work.changeState(WorkItemConst.WORK_STATE_COMPLETE, 0, 60, "exception: " + e);[lf]  }[lf]}</statement><name/><validation_status>0</validation_status><validation_status_msg/></script_line><validation_status>0</validation_status></script>